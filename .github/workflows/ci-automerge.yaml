name: Auto Merge Pull Request
'on':
  push:
    branches:
      - feature/*
      - fix/*
jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Create Pull Request
        id: create_pr
        uses: actions/github-script@v5
        with:
          script: >
            const { data: repo } = await github.repos.get({ owner:
            context.repo.owner, repo: context.repo.repo });

            const { data: branches } = await github.repos.listBranches({ owner:
            context.repo.owner, repo: context.repo.repo });

            const base = repo.default_branch;

            const head = branches.find(branch =>
            context.payload.ref.includes(branch.name)).name;

            const title = `Auto-generated pull request from ${head} to ${base}`;

            const body = 'This pull request was automatically created by a
            workflow.';

            const response = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base,
              head,
              title,
              body,
            });

            core.setOutput('pull-request-number', response.data.number);
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Add Reviewers
        uses: actions/github-script@v5
        with:
          script: >
            const { data: collaborators } = await
            github.repos.listCollaborators({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const pullRequestNumber = context.payload.pull_request.number;

            const reviewers = collaborators.map(collaborator =>
            collaborator.login);

            await github.pulls.createReviewRequest({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequestNumber,
              reviewers,
            });
          token: '${{ secrets.GITHUB_TOKEN }}'
      - name: Wait for Approvals
        id: approvals
        run: >
          pullRequestNumber=$(cat $GITHUB_EVENT_PATH | jq -r
          .pull_request.number)

          token="${{ secrets.GITHUB_TOKEN }}"


          while true; do
            approval_count=$(curl -s -H "Authorization: token $token" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$pullRequestNumber/reviews" | \
              jq '[.[] | select(.state == "APPROVED")] | length')
            
            if [ "$approval_count" -eq $(wc -l <<< "$reviewers") ]; then
              echo "All required approvals received."
              break
            fi
            
            echo "Waiting for approvals... (Currently approved: $approval_count)"
            sleep 60  # Wait for 1 minute before checking again
          done
        env:
          reviewers: '${{ steps.create_pr.outputs.reviewers }}'
      - name: Merge Pull Request
        if: steps.approvals.outputs.approved == 'true'
        uses: actions/github-script@v5
        with:
          script: |
            const pullRequestNumber = context.payload.pull_request.number;
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullRequestNumber,
              merge_method: 'squash',
            });
          token: '${{ secrets.GITHUB_TOKEN }}'
